//Dev Pipeline Deploy to dev environment

pipeline {
    agent any
    environment {
        REPO_URL = 'https://github.com/Thanhlam43k4/Microservices_Nodejs.git'
        FE_IMAGE_ID = 'thanhlam2k4/microservice-fe'
        CUSTOMER_IMAGE_ID = 'thanhlam2k4/microservice-customer'
        SHOPPING_IMAGE_ID = 'thanhlam2k4/microservice-shopping'
        PRODUCT_IMAGE_ID = 'thanhlam2k4/microservice-product'
        DOCKER_NETWORK_NAME = 'micro-dev-net'
        MYSQL_SERVICE_DEV = 'mysql_server'
        JENKINS_DOCKERHUB_CREDENTIALS = 'dockerhub_id'
        PROJECT_DIRECTORY = 'Microservices_Nodejs'
        DEV_IP_ADDRESS = '192.168.56.105'
        STAGING_IP_ADDRESS = '192.168.56.110'
        STAGING_USER ='thanhlam'
        JENKINS_SSH_KEY = 'jenkins-ssh-key'
        STAGING_SUDO_PWD = credentials('staging_sudo_pwd')
        GITHUB_TOKENS = 'github-token'
    }
    stages{
        stage('Deploy to Staging'){
            steps{
                    echo 'Deploy to Staging Environment'
                    script{
                         def deploying = "#!/bin/bash\n"+

                         "\necho ${STAGING_SUDO_PWD} | sudo -S  docker ps" +

                         "\ngit clone ${REPO_URL}" +

                         "\necho ${STAGING_SUDO_PWD} | sudo docker network create ${DOCKER_NETWORK_NAME}" +

                         "\ncd ${PROJECT_DIRECTORY} && echo ${STAGING_SUDO_PWD} | sudo docker compose up ${MYSQL_SERVICE_DEV} -d && sleep 10 &&  echo ${STAGING_SUDO_PWD} | sudo docker compose up -d"

                        sshagent(['jenkins-ssh-key']) {
                            // some block
                            sh """
                                ssh -o StrictHostKeyChecking=no -i ${JENKINS_SSH_KEY} ${STAGING_USER}@${STAGING_IP_ADDRESS} "echo \\\"${deploying}\\\" > deploy.sh && chmod 777 deploy.sh && ./deploy.sh"
                               """
                        }
                    }
            }
        }
        stage('Testing Staging Environment')
        {
            steps{
                echo 'Testing Staging environment .....'

                sh 'sleep 5'

                sh 'curl ${STAGING_IP_ADDRESS}'

                sh 'sleep 5'
            }
        }
    }
// post {
//     // Clean after build
//     always {
//         cleanWs()
//     }
// }
    }
