pipeline {
    agent any
    environment {
        REPO_URL = 'https://github.com/Thanhlam43k4/Microservices_Nodejs.git'
    }
    stages {
        stage('Pulling source code') {
            steps {
                echo 'Pulling code from GitHub............'

                git branch: 'main', url: REPO_URL

                echo 'Pulling successfully................'
            }
        }
        stage('Build Docker image and push to DockerHub') {
            steps {
                echo 'Build docker Image in file Dockerfile' //File Dockerfile in the dir of source code
                //Docker command
                echo 'Build Docker Image'

                // sh 'docker build -t thanhlam2k4/microservice-fe ./frontend'

                // sh 'docker build -t thanhlam2k4/microservice-customer ./customer'
                // //You can run docker image anh check your images in your local machine
                // sh 'docker build -t thanhlam2k4/microservice-shopping ./shopping'

                // sh 'docker build -t thanhlam2k4/microservice-product ./product'

                sh 'docker images'
                withDockerRegistry(credentialsId: 'dockerhub_id', url: 'https://index.docker.io/v1/') {
                    echo 'Push to Dockerhub with dockerhub account thanhlam2k4'
                    // sh 'docker push thanhlam2k4/microservice-customer'

                    // sh 'docker push thanhlam2k4/microservice-shopping'

                    // sh 'docker push thanhlam2k4/microservice-product'
                    
                }
            }
        }
        stage('Prune docker data') {
            steps {
                echo 'Prune data in docker!!!'

                sh 'docker system prune -a --volumes -f'
            }
        }
        stage('Deploy to dev environment') {
            steps {
                echo 'Deploy to dev environment.....'
                // sh 'fuser -k 80/tcp'
                // sh 'docker stop $(docker ps -a)'

                sh 'docker network create micro-dev-net || echo "this network exist"'

                sh 'docker compose up mysql_server -d'

                sh 'docker compose up -d'

                sh 'docker ps'
            }
        }
        stage('Testing Dev development') {
            steps {
                //Test Product service
                sh 'sleep 10'
                echo 'Testing dev development...'

                sh 'curl 192.168.56.105:3000'

                sh 'docker compose down'
            //
            }
        }
        // post {
        //     // Clean after build
        //     always {
        //         cleanWs()
        //     }
        // }
    }
}
