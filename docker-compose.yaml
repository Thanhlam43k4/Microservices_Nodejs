version : "3.8"
services:
  mysql_server:
    container_name: mysql_server
    image: mysql
    environment:
     - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
     - MYSQL_USER=${MYSQL_USER}
     - MYSQL_PASSWORD=${MYSQL_PASSWORD}
     - MYSQL_DATABASE=customer_db
    ports: 
    - "3307:3306"
    volumes:
      # - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql-data:/var/lib/mysql
    networks:
      - micro_net
  product:
    # build: 
    #   dockerfile: Dockerfile
    #   context: ./product
    image: thanhlam2k4/product-micro:4.0
    container_name: product
    ports:
      - "8001:8001"    
    volumes:
      - .:/app
      - /app/product/node_modules
    depends_on:
    - "mysql_server"
    networks:
      - micro_net

  customer:
    # build:
    #   dockerfile: Dockerfile
    #   context: ./customer
    image: thanhlam2k4/customer-micro:4.0
    container_name: customer
    ports:
      - 8003:8003
    volumes:  
      - .:/app 
      - /app/customer/node_modules
    depends_on:
    - "mysql_server"
    networks:
      - micro_net

  shopping:
    # build:
    #   dockerfile: Dockerfile
    #   context: ./shopping
    image: thanhlam2k4/shopping-micro:4.0
    container_name: shopping
    ports:
      - "8002:8002"     
    volumes:
      - .:/app
      - /app/shopping/node_modules
    depends_on:
    - "mysql_server"  
    networks:
    - micro_net  

  
  # phpmyadmin:
  #   container_name: phpmyadmin
  #   image: phpmyadmin:5.2.1
  #   environment:
  #   - PMA_HOST=mysql_server
  #   - PMA_ARBITARY=1
  #   ports:
  #   - 8085:80 
  #   networks:
  #     - micro_net
  
networks:
  micro_net:
    external: true  
  
volumes:
  mysql-data:
